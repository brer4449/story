[{"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\index.js":"1","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\App.js":"2","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\firebase.js":"3","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\HomePage.js":"4","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\LibraryPage.js":"5","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\GiftPage.js":"6","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Navbar\\index.js":"7","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Footer\\index.js":"8","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Login\\index.js":"9","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\ClientForm\\index.js":"10","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Proposal\\index.js":"11","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\GoogleLogout\\index.js":"12","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\GoogleLogin\\index.js":"13","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\utils\\refreshtoken.js":"14","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\EntryPage.js":"15","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Signup\\index.js":"16","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\context\\AuthContext.js":"17","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\UpdateProfile\\index.js":"18","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\PrivateRoute\\index.js":"19","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Dashboard\\index.js":"20","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\ForgotPassword\\index.js":"21"},{"size":213,"mtime":1610030944133,"results":"22","hashOfConfig":"23"},{"size":1534,"mtime":1610122443142,"results":"24","hashOfConfig":"23"},{"size":1083,"mtime":1610468173078,"results":"25","hashOfConfig":"23"},{"size":2995,"mtime":1609885538407,"results":"26","hashOfConfig":"23"},{"size":1351,"mtime":1610468451125,"results":"27","hashOfConfig":"23"},{"size":794,"mtime":1609885538392,"results":"28","hashOfConfig":"23"},{"size":2345,"mtime":1609885538154,"results":"29","hashOfConfig":"23"},{"size":228,"mtime":1609885538018,"results":"30","hashOfConfig":"23"},{"size":2459,"mtime":1610468583748,"results":"31","hashOfConfig":"23"},{"size":5610,"mtime":1609885537978,"results":"32","hashOfConfig":"23"},{"size":4615,"mtime":1609885538194,"results":"33","hashOfConfig":"23"},{"size":621,"mtime":1609120182505,"results":"34","hashOfConfig":"23"},{"size":1060,"mtime":1609121965528,"results":"35","hashOfConfig":"23"},{"size":905,"mtime":1609122244464,"results":"36","hashOfConfig":"23"},{"size":297,"mtime":1610053442837,"results":"37","hashOfConfig":"23"},{"size":2913,"mtime":1610468600229,"results":"38","hashOfConfig":"23"},{"size":2395,"mtime":1610032355029,"results":"39","hashOfConfig":"23"},{"size":3763,"mtime":1610150960756,"results":"40","hashOfConfig":"23"},{"size":785,"mtime":1610119454270,"results":"41","hashOfConfig":"23"},{"size":1469,"mtime":1610120679659,"results":"42","hashOfConfig":"23"},{"size":2158,"mtime":1610122361932,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"tl9nfn",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\index.js",[],["90","91"],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\App.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\firebase.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\HomePage.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\LibraryPage.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\GiftPage.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Navbar\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Footer\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Login\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\ClientForm\\index.js",["92"],"import React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport \"./style.css\";\nimport axios from \"axios\";\nimport db from \"../../firebase\";\n\nconst ClientForm = () => {\n  const [inputs, setInputs] = useState({\n    timeFrame: \"\",\n    recipient: \"\",\n    priceRange: \"\",\n    genre: \"\",\n    size: \"\",\n    specifics: \"\",\n  });\n  // Server state handling\n  const [serverState, setServerState] = useState({\n    submitting: false,\n    status: null,\n  });\n  //State to track field errors\n  const [fieldErrors, setFieldErrors] = useState({});\n\n  //Validation rules for each input field\n  const validationRules = {\n    timeFrame: (val) => !!val,\n    recipient: (val) => !!val,\n    priceRange: (val) => !!val,\n    genre: (val) => !!val,\n    size: (val) => !!val,\n    specifics: (val) => !!val,\n  };\n\n  // Validate function that updates state and returns true if all rules pass\n  const validate = () => {\n    let errors = {};\n    let hasErrors = false;\n    for (let key of Object.keys(inputs)) {\n      errors[key] = !validationRules[key](inputs[key]);\n      hasErrors |= errors[key];\n    }\n    setFieldErrors((prev) => ({ ...prev, ...errors }));\n    return !hasErrors;\n  };\n\n  // Render method to display field errors\n  const renderFieldError = (field) => {\n    if (fieldErrors[field]) {\n      return <p className=\"errorMsg\">Please enter a valid {field}.</p>;\n    }\n  };\n\n  const handleOnChange = (e) => {\n    e.persist();\n    setInputs((prev) => ({\n      ...prev,\n      [e.target.id]: e.target.value,\n    }));\n  };\n\n  const handleServerResponse = (ok, msg) => {\n    setServerState({\n      submitting: false,\n      status: { ok, msg },\n    });\n    if (ok) {\n      setFieldErrors({});\n      setInputs({\n        timeFrame: \"\",\n        recipient: \"\",\n        priceRange: \"\",\n        genre: \"\",\n        size: \"\",\n        specifics: \"\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    // Only perform interactive validation after submit\n    if (Object.keys(fieldErrors).length > 0) {\n      validate();\n    }\n  }, [inputs]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!validate()) {\n      return;\n    }\n    db.collection(\"application\")\n      .add({\n        timeFrame: inputs.timeFrame,\n        recipient: inputs.recipient,\n        priceRange: inputs.priceRange,\n        genre: inputs.genre,\n        size: inputs.size,\n        specifics: inputs.specifics,\n      })\n      .then(() => {\n        alert(\"Your application has been submitted!\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n    setServerState({ submitting: true });\n    axios({\n      method: \"POST\",\n      url: `https://formspree.io/f/xyyjvbzz`,\n      data: inputs,\n    })\n      .then((r) => {\n        handleServerResponse(true, \"Thanks for submitting your application!\");\n      })\n      .catch((r) => {\n        handleServerResponse(false, r.response.data.error);\n      });\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"timeFrame\">Estimated Time Frame:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"timeFrame\"\n          name=\"timeFrame\"\n          placeholder=\"How long will this project take?\"\n          value={inputs.timeFrame}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"timeFrame\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"recipient\">Recipient:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"recipient\"\n          name=\"recipient\"\n          placeholder=\"Who is the gift for?\"\n          value={inputs.recipient}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"recipient\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"priceRange\">Price Range:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"priceRange\"\n          name=\"priceRange\"\n          placeholder=\"What's your price range?\"\n          value={inputs.priceRange}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"priceRange\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"genre\">Genre:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"genre\"\n          name=\"genre\"\n          placeholder=\"What type of story is it?\"\n          value={inputs.genre}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"genre\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"size\">Size of Project:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"size\"\n          name=\"size\"\n          placeholder=\"How large will the project be?\"\n          value={inputs.size}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"size\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"specifics\">Specifics About Project:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"specifics\"\n          name=\"specifics\"\n          placeholder=\"What are some things we should know about the project?\"\n          value={inputs.specifics}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"specifics\")}\n      </div>\n      <button className={\"btn btn-primary mb-10 \"} type=\"submit\">\n        Submit\n      </button>\n      {serverState.status && (\n        <p className={!serverState.status.ok ? \"errorMsg\" : \"successMsg\"}>\n          {serverState.status.msg}\n        </p>\n      )}\n    </Form>\n  );\n};\nexport default ClientForm;\n","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Proposal\\index.js",["93"],"import React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport db from \"../../firebase\";\n\nconst Proposal = () => {\n  // https://formspree.io/blog/react-forms-2/\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    requirement: \"\",\n    rate: \"\",\n  });\n  // Server state handling\n  const [serverState, setServerState] = useState({\n    submitting: false,\n    status: null,\n  });\n  // State to track field errors\n  const [fieldErrors, setFieldErrors] = useState({});\n\n  // Validation rules for each input field\n  const validationRules = {\n    email: (val) => val && /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(val),\n    requirement: (val) => !!val,\n    rate: (val) => !!val,\n  };\n\n  // Validate function that updates state, and returns true if all rules pass\n  const validate = () => {\n    let errors = {};\n    let hasErrors = false;\n    for (let key of Object.keys(inputs)) {\n      errors[key] = !validationRules[key](inputs[key]);\n      hasErrors |= errors[key];\n    }\n    setFieldErrors((prev) => ({ ...prev, ...errors }));\n    return !hasErrors;\n  };\n\n  // Render method to display field errors\n  const renderFieldError = (field) => {\n    if (fieldErrors[field]) {\n      return <p className=\"errorMsg\">Please enter a valid {field}.</p>;\n    }\n  };\n\n  const handleOnChange = (e) => {\n    e.persist();\n    setInputs((prev) => ({\n      ...prev,\n      [e.target.id]: e.target.value,\n    }));\n  };\n\n  const handleServerResponse = (ok, msg) => {\n    setServerState({\n      submitting: false,\n      status: { ok, msg },\n    });\n    if (ok) {\n      setFieldErrors({});\n      setInputs({\n        email: \"\",\n        requirement: \"\",\n        rate: \"\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    // Only perform interactive validation after submit\n    if (Object.keys(fieldErrors).length > 0) {\n      validate();\n    }\n  }, [inputs]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!validate()) {\n      return;\n    }\n    db.collection(\"proposal\")\n      .add({\n        email: inputs.email,\n        requirement: inputs.requirement,\n        rate: inputs.rate,\n      })\n      .then(() => {\n        alert(\"Your proposal has been submitted!\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n    setServerState({ submitting: true });\n    axios({\n      method: \"POST\",\n      url: `https://formspree.io/f/xyyjvbzz`,\n      data: inputs,\n    })\n      .then((r) => {\n        handleServerResponse(true, \"Thanks for submitting your application!\");\n      })\n      .catch((r) => {\n        handleServerResponse(false, r.response.data.error);\n      });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} noValidate>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"email\">Email Address:</Form.Label>\n        <Form.Control\n          required\n          type=\"text\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"What's your email address?\"\n          value={inputs.email}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"email\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"requirement\">\n          This is What You Need from the Client to be Successful:\n        </Form.Label>\n        <Form.Control\n          required\n          type=\"text\"\n          id=\"requirement\"\n          name=\"requirement\"\n          placeholder=\"What do you require from the client for this project to be successful?\"\n          value={inputs.requirement}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"requirement\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"rate\">What's Your Rate:</Form.Label>\n        <Form.Control\n          required\n          type=\"text\"\n          id=\"rate\"\n          name=\"rate\"\n          placeholder=\"How Much Do You Charge per Story?\"\n          value={inputs.rate}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"rate\")}\n      </div>\n      <button\n        className={\"btn btn-primary mb-10 \"}\n        disabled={serverState.submitting}\n        type=\"submit\"\n      >\n        Submit\n      </button>\n      {/* DO WITH JOSEPH! */}\n      {serverState.status && (\n        <p className={!serverState.status.ok ? \"errorMsg\" : \"successMsg\"}>\n          {serverState.status.msg}\n        </p>\n      )}\n      {/* setTimeout(() => {\n          <p className={!serverState.status.ok ? \"errorMsg\" : \"successMsg\"}>\n            {serverState.status.msg}\n          </p>;\n        }, 3000)} */}\n    </Form>\n  );\n};\n\nexport default Proposal;\n","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\GoogleLogout\\index.js",[],["94","95"],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\GoogleLogin\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\utils\\refreshtoken.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\EntryPage.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Signup\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\context\\AuthContext.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\UpdateProfile\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\PrivateRoute\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Dashboard\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\ForgotPassword\\index.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":84,"column":6,"nodeType":"102","endLine":84,"endColumn":14,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"101","line":76,"column":6,"nodeType":"102","endLine":76,"endColumn":14,"suggestions":"104"},{"ruleId":"96","replacedBy":"105"},{"ruleId":"98","replacedBy":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fieldErrors' and 'validate'. Either include them or remove the dependency array.","ArrayExpression",["109"],["110"],["107"],["108"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"111","fix":"113"},"Update the dependencies array to be: [fieldErrors, inputs, validate]",{"range":"114","text":"115"},{"range":"116","text":"115"},[2026,2034],"[fieldErrors, inputs, validate]",[1898,1906]]