[{"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\index.js":"1","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\App.js":"2","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\firebase.js":"3","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\HomePage.js":"4","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\LibraryPage.js":"5","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\GiftPage.js":"6","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Navbar\\index.js":"7","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Footer\\index.js":"8","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Login\\index.js":"9","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\ClientForm\\index.js":"10","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Proposal\\index.js":"11","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\GoogleLogout\\index.js":"12","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\GoogleLogin\\index.js":"13","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\utils\\refreshtoken.js":"14","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\EntryPage.js":"15","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Signup\\index.js":"16"},{"size":166,"mtime":1607225317733,"results":"17","hashOfConfig":"18"},{"size":1112,"mtime":1609794412254,"results":"19","hashOfConfig":"18"},{"size":1372,"mtime":1609794877854,"results":"20","hashOfConfig":"18"},{"size":2995,"mtime":1609285638289,"results":"21","hashOfConfig":"18"},{"size":1399,"mtime":1609285650134,"results":"22","hashOfConfig":"18"},{"size":825,"mtime":1609285645220,"results":"23","hashOfConfig":"18"},{"size":2428,"mtime":1609792862774,"results":"24","hashOfConfig":"18"},{"size":242,"mtime":1609283683514,"results":"25","hashOfConfig":"18"},{"size":3976,"mtime":1609797618696,"results":"26","hashOfConfig":"18"},{"size":5814,"mtime":1609790916739,"results":"27","hashOfConfig":"18"},{"size":4789,"mtime":1609791603626,"results":"28","hashOfConfig":"18"},{"size":621,"mtime":1609120182505,"results":"29","hashOfConfig":"18"},{"size":1060,"mtime":1609121965528,"results":"30","hashOfConfig":"18"},{"size":905,"mtime":1609122244464,"results":"31","hashOfConfig":"18"},{"size":984,"mtime":1609794319472,"results":"32","hashOfConfig":"18"},{"size":3619,"mtime":1609797757462,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"tl9nfn",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\index.js",[],["71","72"],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\App.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\firebase.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\HomePage.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\LibraryPage.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\GiftPage.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Navbar\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Footer\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Login\\index.js",["73","74"],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\ClientForm\\index.js",["75"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\nimport db from \"../../firebase\";\r\n\r\nconst ClientForm = () => {\r\n  const [inputs, setInputs] = useState({\r\n    timeFrame: \"\",\r\n    recipient: \"\",\r\n    priceRange: \"\",\r\n    genre: \"\",\r\n    size: \"\",\r\n    specifics: \"\",\r\n  });\r\n  // Server state handling\r\n  const [serverState, setServerState] = useState({\r\n    submitting: false,\r\n    status: null,\r\n  });\r\n  //State to track field errors\r\n  const [fieldErrors, setFieldErrors] = useState({});\r\n\r\n  //Validation rules for each input field\r\n  const validationRules = {\r\n    timeFrame: (val) => !!val,\r\n    recipient: (val) => !!val,\r\n    priceRange: (val) => !!val,\r\n    genre: (val) => !!val,\r\n    size: (val) => !!val,\r\n    specifics: (val) => !!val,\r\n  };\r\n\r\n  // Validate function that updates state and returns true if all rules pass\r\n  const validate = () => {\r\n    let errors = {};\r\n    let hasErrors = false;\r\n    for (let key of Object.keys(inputs)) {\r\n      errors[key] = !validationRules[key](inputs[key]);\r\n      hasErrors |= errors[key];\r\n    }\r\n    setFieldErrors((prev) => ({ ...prev, ...errors }));\r\n    return !hasErrors;\r\n  };\r\n\r\n  // Render method to display field errors\r\n  const renderFieldError = (field) => {\r\n    if (fieldErrors[field]) {\r\n      return <p className=\"errorMsg\">Please enter a valid {field}.</p>;\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    e.persist();\r\n    setInputs((prev) => ({\r\n      ...prev,\r\n      [e.target.id]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleServerResponse = (ok, msg) => {\r\n    setServerState({\r\n      submitting: false,\r\n      status: { ok, msg },\r\n    });\r\n    if (ok) {\r\n      setFieldErrors({});\r\n      setInputs({\r\n        timeFrame: \"\",\r\n        recipient: \"\",\r\n        priceRange: \"\",\r\n        genre: \"\",\r\n        size: \"\",\r\n        specifics: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Only perform interactive validation after submit\r\n    if (Object.keys(fieldErrors).length > 0) {\r\n      validate();\r\n    }\r\n  }, [inputs]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validate()) {\r\n      return;\r\n    }\r\n    db.collection(\"application\")\r\n      .add({\r\n        timeFrame: inputs.timeFrame,\r\n        recipient: inputs.recipient,\r\n        priceRange: inputs.priceRange,\r\n        genre: inputs.genre,\r\n        size: inputs.size,\r\n        specifics: inputs.specifics,\r\n      })\r\n      .then(() => {\r\n        alert(\"Your application has been submitted!\");\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      });\r\n    setServerState({ submitting: true });\r\n    axios({\r\n      method: \"POST\",\r\n      url: `https://formspree.io/f/xyyjvbzz`,\r\n      data: inputs,\r\n    })\r\n      .then((r) => {\r\n        handleServerResponse(true, \"Thanks for submitting your application!\");\r\n      })\r\n      .catch((r) => {\r\n        handleServerResponse(false, r.response.data.error);\r\n      });\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <div className=\"mb-10\">\r\n        <Form.Label htmlFor=\"timeFrame\">Estimated Time Frame:</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          id=\"timeFrame\"\r\n          name=\"timeFrame\"\r\n          placeholder=\"How long will this project take?\"\r\n          value={inputs.timeFrame}\r\n          onChange={handleOnChange}\r\n        ></Form.Control>\r\n        {renderFieldError(\"timeFrame\")}\r\n      </div>\r\n      <div className=\"mb-10\">\r\n        <Form.Label htmlFor=\"recipient\">Recipient:</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          id=\"recipient\"\r\n          name=\"recipient\"\r\n          placeholder=\"Who is the gift for?\"\r\n          value={inputs.recipient}\r\n          onChange={handleOnChange}\r\n        ></Form.Control>\r\n        {renderFieldError(\"recipient\")}\r\n      </div>\r\n      <div className=\"mb-10\">\r\n        <Form.Label htmlFor=\"priceRange\">Price Range:</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          id=\"priceRange\"\r\n          name=\"priceRange\"\r\n          placeholder=\"What's your price range?\"\r\n          value={inputs.priceRange}\r\n          onChange={handleOnChange}\r\n        ></Form.Control>\r\n        {renderFieldError(\"priceRange\")}\r\n      </div>\r\n      <div className=\"mb-10\">\r\n        <Form.Label htmlFor=\"genre\">Genre:</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          id=\"genre\"\r\n          name=\"genre\"\r\n          placeholder=\"What type of story is it?\"\r\n          value={inputs.genre}\r\n          onChange={handleOnChange}\r\n        ></Form.Control>\r\n        {renderFieldError(\"genre\")}\r\n      </div>\r\n      <div className=\"mb-10\">\r\n        <Form.Label htmlFor=\"size\">Size of Project:</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          id=\"size\"\r\n          name=\"size\"\r\n          placeholder=\"How large will the project be?\"\r\n          value={inputs.size}\r\n          onChange={handleOnChange}\r\n        ></Form.Control>\r\n        {renderFieldError(\"size\")}\r\n      </div>\r\n      <div className=\"mb-10\">\r\n        <Form.Label htmlFor=\"specifics\">Specifics About Project:</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          id=\"specifics\"\r\n          name=\"specifics\"\r\n          placeholder=\"What are some things we should know about the project?\"\r\n          value={inputs.specifics}\r\n          onChange={handleOnChange}\r\n        ></Form.Control>\r\n        {renderFieldError(\"specifics\")}\r\n      </div>\r\n      <button className={\"btn btn-primary mb-10 \"} type=\"submit\">\r\n        Submit\r\n      </button>\r\n      {serverState.status && (\r\n        <p className={!serverState.status.ok ? \"errorMsg\" : \"successMsg\"}>\r\n          {serverState.status.msg}\r\n        </p>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\nexport default ClientForm;\r\n","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Proposal\\index.js",["76"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./styles.css\";\r\nimport axios from \"axios\";\r\nimport db from \"../../firebase\";\r\n\r\nconst Proposal = () => {\r\n  // https://formspree.io/blog/react-forms-2/\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    requirement: \"\",\r\n    rate: \"\",\r\n  });\r\n  // Server state handling\r\n  const [serverState, setServerState] = useState({\r\n    submitting: false,\r\n    status: null,\r\n  });\r\n  // State to track field errors\r\n  const [fieldErrors, setFieldErrors] = useState({});\r\n\r\n  // Validation rules for each input field\r\n  const validationRules = {\r\n    email: (val) => val && /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(val),\r\n    requirement: (val) => !!val,\r\n    rate: (val) => !!val,\r\n  };\r\n\r\n  // Validate function that updates state, and returns true if all rules pass\r\n  const validate = () => {\r\n    let errors = {};\r\n    let hasErrors = false;\r\n    for (let key of Object.keys(inputs)) {\r\n      errors[key] = !validationRules[key](inputs[key]);\r\n      hasErrors |= errors[key];\r\n    }\r\n    setFieldErrors((prev) => ({ ...prev, ...errors }));\r\n    return !hasErrors;\r\n  };\r\n\r\n  // Render method to display field errors\r\n  const renderFieldError = (field) => {\r\n    if (fieldErrors[field]) {\r\n      return <p className=\"errorMsg\">Please enter a valid {field}.</p>;\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    e.persist();\r\n    setInputs((prev) => ({\r\n      ...prev,\r\n      [e.target.id]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleServerResponse = (ok, msg) => {\r\n    setServerState({\r\n      submitting: false,\r\n      status: { ok, msg },\r\n    });\r\n    if (ok) {\r\n      setFieldErrors({});\r\n      setInputs({\r\n        email: \"\",\r\n        requirement: \"\",\r\n        rate: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Only perform interactive validation after submit\r\n    if (Object.keys(fieldErrors).length > 0) {\r\n      validate();\r\n    }\r\n  }, [inputs]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validate()) {\r\n      return;\r\n    }\r\n    db.collection(\"proposal\")\r\n      .add({\r\n        email: inputs.email,\r\n        requirement: inputs.requirement,\r\n        rate: inputs.rate,\r\n      })\r\n      .then(() => {\r\n        alert(\"Your proposal has been submitted!\");\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      });\r\n    setServerState({ submitting: true });\r\n    axios({\r\n      method: \"POST\",\r\n      url: `https://formspree.io/f/xyyjvbzz`,\r\n      data: inputs,\r\n    })\r\n      .then((r) => {\r\n        handleServerResponse(true, \"Thanks for submitting your application!\");\r\n      })\r\n      .catch((r) => {\r\n        handleServerResponse(false, r.response.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} noValidate>\r\n      <div className=\"mb-10\">\r\n        <Form.Label htmlFor=\"email\">Email Address:</Form.Label>\r\n        <Form.Control\r\n          required\r\n          type=\"text\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"What's your email address?\"\r\n          value={inputs.email}\r\n          onChange={handleOnChange}\r\n        ></Form.Control>\r\n        {renderFieldError(\"email\")}\r\n      </div>\r\n      <div className=\"mb-10\">\r\n        <Form.Label htmlFor=\"requirement\">\r\n          This is What You Need from the Client to be Successful:\r\n        </Form.Label>\r\n        <Form.Control\r\n          required\r\n          type=\"text\"\r\n          id=\"requirement\"\r\n          name=\"requirement\"\r\n          placeholder=\"What do you require from the client for this project to be successful?\"\r\n          value={inputs.requirement}\r\n          onChange={handleOnChange}\r\n        ></Form.Control>\r\n        {renderFieldError(\"requirement\")}\r\n      </div>\r\n      <div className=\"mb-10\">\r\n        <Form.Label htmlFor=\"rate\">What's Your Rate:</Form.Label>\r\n        <Form.Control\r\n          required\r\n          type=\"text\"\r\n          id=\"rate\"\r\n          name=\"rate\"\r\n          placeholder=\"How Much Do You Charge per Story?\"\r\n          value={inputs.rate}\r\n          onChange={handleOnChange}\r\n        ></Form.Control>\r\n        {renderFieldError(\"rate\")}\r\n      </div>\r\n      <button\r\n        className={\"btn btn-primary mb-10 \"}\r\n        disabled={serverState.submitting}\r\n        type=\"submit\"\r\n      >\r\n        Submit\r\n      </button>\r\n      {/* DO WITH JOSEPH! */}\r\n      {serverState.status && (\r\n        <p className={!serverState.status.ok ? \"errorMsg\" : \"successMsg\"}>\r\n          {serverState.status.msg}\r\n        </p>\r\n      )}\r\n      {/* setTimeout(() => {\r\n          <p className={!serverState.status.ok ? \"errorMsg\" : \"successMsg\"}>\r\n            {serverState.status.msg}\r\n          </p>;\r\n        }, 3000)} */}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Proposal;\r\n","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\GoogleLogout\\index.js",[],["77","78"],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\GoogleLogin\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\utils\\refreshtoken.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\EntryPage.js",["79"],"import React from \"react\";\r\nimport Login from \"../components/Login/index\";\r\nimport Signup from \"../components/Signup/index\";\r\nimport Footer from \"../components/Footer/index\";\r\n\r\nfunction Entry() {\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card text-center\">\r\n              <div className=\"card-header\">\r\n                <h1>Signup to be a Part of Our Every Growing Community</h1>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <Signup></Signup>\r\n                <em className=\"small\">Already have an account?</em>{\" \"}\r\n                <a className=\"small\" href=\"/Login\">\r\n                  Login Here\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Entry;\r\n","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Signup\\index.js",["80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":71,"column":6,"nodeType":"87","endLine":71,"endColumn":14,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":135,"column":9,"nodeType":"91","endLine":135,"endColumn":21},{"ruleId":"85","severity":1,"message":"92","line":84,"column":6,"nodeType":"87","endLine":84,"endColumn":14,"suggestions":"93"},{"ruleId":"85","severity":1,"message":"92","line":76,"column":6,"nodeType":"87","endLine":76,"endColumn":14,"suggestions":"94"},{"ruleId":"81","replacedBy":"95"},{"ruleId":"83","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"85","severity":1,"message":"92","line":72,"column":6,"nodeType":"87","endLine":72,"endColumn":14,"suggestions":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fieldErrors.length' and 'validate'. Either include them or remove the dependency array.","ArrayExpression",["104"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'fieldErrors' and 'validate'. Either include them or remove the dependency array.",["105"],["106"],["102"],["103"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"110","fix":"112"},{"desc":"110","fix":"113"},"Update the dependencies array to be: [fieldErrors.length, inputs, validate]",{"range":"114","text":"115"},"Update the dependencies array to be: [fieldErrors, inputs, validate]",{"range":"116","text":"117"},{"range":"118","text":"117"},{"range":"119","text":"117"},[1932,1940],"[fieldErrors.length, inputs, validate]",[2109,2117],"[fieldErrors, inputs, validate]",[1973,1981],[1934,1942]]