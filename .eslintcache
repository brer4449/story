[{"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\index.js":"1","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\App.js":"2","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\firebase.js":"3","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\HomePage.js":"4","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\LibraryPage.js":"5","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\GiftPage.js":"6","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Navbar\\index.js":"7","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Footer\\index.js":"8","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Login\\index.js":"9","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\ClientForm\\index.js":"10","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Proposal\\index.js":"11","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\GoogleLogout\\index.js":"12","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\GoogleLogin\\index.js":"13","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\utils\\refreshtoken.js":"14","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\EntryPage.js":"15","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Signup\\index.js":"16","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\context\\AuthContext.js":"17","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\UpdateProfile\\index.js":"18","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\PrivateRoute\\index.js":"19","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Dashboard\\index.js":"20","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\ForgotPassword\\index.js":"21"},{"size":213,"mtime":1610030944133,"results":"22","hashOfConfig":"23"},{"size":1534,"mtime":1610122443142,"results":"24","hashOfConfig":"23"},{"size":785,"mtime":1610834810601,"results":"25","hashOfConfig":"23"},{"size":2995,"mtime":1609885538407,"results":"26","hashOfConfig":"23"},{"size":1351,"mtime":1610468451125,"results":"27","hashOfConfig":"23"},{"size":794,"mtime":1609885538392,"results":"28","hashOfConfig":"23"},{"size":3038,"mtime":1610470621802,"results":"29","hashOfConfig":"23"},{"size":228,"mtime":1609885538018,"results":"30","hashOfConfig":"23"},{"size":2459,"mtime":1610468583748,"results":"31","hashOfConfig":"23"},{"size":5610,"mtime":1609885537978,"results":"32","hashOfConfig":"23"},{"size":4615,"mtime":1609885538194,"results":"33","hashOfConfig":"23"},{"size":621,"mtime":1609120182505,"results":"34","hashOfConfig":"23"},{"size":1060,"mtime":1609121965528,"results":"35","hashOfConfig":"23"},{"size":905,"mtime":1609122244464,"results":"36","hashOfConfig":"23"},{"size":297,"mtime":1610053442837,"results":"37","hashOfConfig":"23"},{"size":2913,"mtime":1610468600229,"results":"38","hashOfConfig":"23"},{"size":2395,"mtime":1610032355029,"results":"39","hashOfConfig":"23"},{"size":3780,"mtime":1610470287679,"results":"40","hashOfConfig":"23"},{"size":785,"mtime":1610119454270,"results":"41","hashOfConfig":"23"},{"size":1489,"mtime":1610470105253,"results":"42","hashOfConfig":"23"},{"size":2158,"mtime":1610122361932,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"tl9nfn",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\index.js",[],["92","93"],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\App.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\firebase.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\HomePage.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\LibraryPage.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\GiftPage.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Navbar\\index.js",["94"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  const { currentUser } = useAuth();\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark navbar-custom\">\n      <img\n        src=\"https://images.pexels.com/photos/159872/book-open-pages-literature-159872.jpeg\"\n        width=\"100px\"\n        height=\"100px\"\n        className=\"d-inline-block align-top\"\n        alt=\"open book logo\"\n      />\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n          <li className=\"nav-item\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === \"/ \"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Home\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/Library\"\n              className={\n                window.location.pathname === \"/Library\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Library\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/Gift\"\n              className={\n                window.location.pathname === \"/Gift\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Gift\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            {currentUser ? (\n              <Link\n                to=\"/Dashboard\"\n                className={\n                  window.location.pathname === \"/Dashboard \"\n                    ? \"nav-link active\"\n                    : \"nav-link\"\n                }\n              >\n                <img\n                  className=\"rounded-circle\"\n                  src={`${process.env.PUBLIC_URL}/images/construction.jpg`}\n                  width={\"25px\"}\n                  height={\"25px\"}\n                />{\" \"}\n                Profile\n              </Link>\n            ) : (\n              <Link\n                to=\"/Entry\"\n                className={\n                  window.location.pathname === \"/Entry\"\n                    ? \"nav-link active\"\n                    : \"nav-link\"\n                }\n              >\n                Sign Up\n              </Link>\n            )}\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Footer\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Login\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\ClientForm\\index.js",["95"],"import React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport \"./style.css\";\nimport axios from \"axios\";\nimport db from \"../../firebase\";\n\nconst ClientForm = () => {\n  const [inputs, setInputs] = useState({\n    timeFrame: \"\",\n    recipient: \"\",\n    priceRange: \"\",\n    genre: \"\",\n    size: \"\",\n    specifics: \"\",\n  });\n  // Server state handling\n  const [serverState, setServerState] = useState({\n    submitting: false,\n    status: null,\n  });\n  //State to track field errors\n  const [fieldErrors, setFieldErrors] = useState({});\n\n  //Validation rules for each input field\n  const validationRules = {\n    timeFrame: (val) => !!val,\n    recipient: (val) => !!val,\n    priceRange: (val) => !!val,\n    genre: (val) => !!val,\n    size: (val) => !!val,\n    specifics: (val) => !!val,\n  };\n\n  // Validate function that updates state and returns true if all rules pass\n  const validate = () => {\n    let errors = {};\n    let hasErrors = false;\n    for (let key of Object.keys(inputs)) {\n      errors[key] = !validationRules[key](inputs[key]);\n      hasErrors |= errors[key];\n    }\n    setFieldErrors((prev) => ({ ...prev, ...errors }));\n    return !hasErrors;\n  };\n\n  // Render method to display field errors\n  const renderFieldError = (field) => {\n    if (fieldErrors[field]) {\n      return <p className=\"errorMsg\">Please enter a valid {field}.</p>;\n    }\n  };\n\n  const handleOnChange = (e) => {\n    e.persist();\n    setInputs((prev) => ({\n      ...prev,\n      [e.target.id]: e.target.value,\n    }));\n  };\n\n  const handleServerResponse = (ok, msg) => {\n    setServerState({\n      submitting: false,\n      status: { ok, msg },\n    });\n    if (ok) {\n      setFieldErrors({});\n      setInputs({\n        timeFrame: \"\",\n        recipient: \"\",\n        priceRange: \"\",\n        genre: \"\",\n        size: \"\",\n        specifics: \"\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    // Only perform interactive validation after submit\n    if (Object.keys(fieldErrors).length > 0) {\n      validate();\n    }\n  }, [inputs]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!validate()) {\n      return;\n    }\n    db.collection(\"application\")\n      .add({\n        timeFrame: inputs.timeFrame,\n        recipient: inputs.recipient,\n        priceRange: inputs.priceRange,\n        genre: inputs.genre,\n        size: inputs.size,\n        specifics: inputs.specifics,\n      })\n      .then(() => {\n        alert(\"Your application has been submitted!\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n    setServerState({ submitting: true });\n    axios({\n      method: \"POST\",\n      url: `https://formspree.io/f/xyyjvbzz`,\n      data: inputs,\n    })\n      .then((r) => {\n        handleServerResponse(true, \"Thanks for submitting your application!\");\n      })\n      .catch((r) => {\n        handleServerResponse(false, r.response.data.error);\n      });\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"timeFrame\">Estimated Time Frame:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"timeFrame\"\n          name=\"timeFrame\"\n          placeholder=\"How long will this project take?\"\n          value={inputs.timeFrame}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"timeFrame\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"recipient\">Recipient:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"recipient\"\n          name=\"recipient\"\n          placeholder=\"Who is the gift for?\"\n          value={inputs.recipient}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"recipient\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"priceRange\">Price Range:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"priceRange\"\n          name=\"priceRange\"\n          placeholder=\"What's your price range?\"\n          value={inputs.priceRange}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"priceRange\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"genre\">Genre:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"genre\"\n          name=\"genre\"\n          placeholder=\"What type of story is it?\"\n          value={inputs.genre}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"genre\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"size\">Size of Project:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"size\"\n          name=\"size\"\n          placeholder=\"How large will the project be?\"\n          value={inputs.size}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"size\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"specifics\">Specifics About Project:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"specifics\"\n          name=\"specifics\"\n          placeholder=\"What are some things we should know about the project?\"\n          value={inputs.specifics}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"specifics\")}\n      </div>\n      <button className={\"btn btn-primary mb-10 \"} type=\"submit\">\n        Submit\n      </button>\n      {serverState.status && (\n        <p className={!serverState.status.ok ? \"errorMsg\" : \"successMsg\"}>\n          {serverState.status.msg}\n        </p>\n      )}\n    </Form>\n  );\n};\nexport default ClientForm;\n","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Proposal\\index.js",["96"],"import React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport db from \"../../firebase\";\n\nconst Proposal = () => {\n  // https://formspree.io/blog/react-forms-2/\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    requirement: \"\",\n    rate: \"\",\n  });\n  // Server state handling\n  const [serverState, setServerState] = useState({\n    submitting: false,\n    status: null,\n  });\n  // State to track field errors\n  const [fieldErrors, setFieldErrors] = useState({});\n\n  // Validation rules for each input field\n  const validationRules = {\n    email: (val) => val && /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(val),\n    requirement: (val) => !!val,\n    rate: (val) => !!val,\n  };\n\n  // Validate function that updates state, and returns true if all rules pass\n  const validate = () => {\n    let errors = {};\n    let hasErrors = false;\n    for (let key of Object.keys(inputs)) {\n      errors[key] = !validationRules[key](inputs[key]);\n      hasErrors |= errors[key];\n    }\n    setFieldErrors((prev) => ({ ...prev, ...errors }));\n    return !hasErrors;\n  };\n\n  // Render method to display field errors\n  const renderFieldError = (field) => {\n    if (fieldErrors[field]) {\n      return <p className=\"errorMsg\">Please enter a valid {field}.</p>;\n    }\n  };\n\n  const handleOnChange = (e) => {\n    e.persist();\n    setInputs((prev) => ({\n      ...prev,\n      [e.target.id]: e.target.value,\n    }));\n  };\n\n  const handleServerResponse = (ok, msg) => {\n    setServerState({\n      submitting: false,\n      status: { ok, msg },\n    });\n    if (ok) {\n      setFieldErrors({});\n      setInputs({\n        email: \"\",\n        requirement: \"\",\n        rate: \"\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    // Only perform interactive validation after submit\n    if (Object.keys(fieldErrors).length > 0) {\n      validate();\n    }\n  }, [inputs]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!validate()) {\n      return;\n    }\n    db.collection(\"proposal\")\n      .add({\n        email: inputs.email,\n        requirement: inputs.requirement,\n        rate: inputs.rate,\n      })\n      .then(() => {\n        alert(\"Your proposal has been submitted!\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n    setServerState({ submitting: true });\n    axios({\n      method: \"POST\",\n      url: `https://formspree.io/f/xyyjvbzz`,\n      data: inputs,\n    })\n      .then((r) => {\n        handleServerResponse(true, \"Thanks for submitting your application!\");\n      })\n      .catch((r) => {\n        handleServerResponse(false, r.response.data.error);\n      });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} noValidate>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"email\">Email Address:</Form.Label>\n        <Form.Control\n          required\n          type=\"text\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"What's your email address?\"\n          value={inputs.email}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"email\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"requirement\">\n          This is What You Need from the Client to be Successful:\n        </Form.Label>\n        <Form.Control\n          required\n          type=\"text\"\n          id=\"requirement\"\n          name=\"requirement\"\n          placeholder=\"What do you require from the client for this project to be successful?\"\n          value={inputs.requirement}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"requirement\")}\n      </div>\n      <div className=\"mb-10\">\n        <Form.Label htmlFor=\"rate\">What's Your Rate:</Form.Label>\n        <Form.Control\n          required\n          type=\"text\"\n          id=\"rate\"\n          name=\"rate\"\n          placeholder=\"How Much Do You Charge per Story?\"\n          value={inputs.rate}\n          onChange={handleOnChange}\n        ></Form.Control>\n        {renderFieldError(\"rate\")}\n      </div>\n      <button\n        className={\"btn btn-primary mb-10 \"}\n        disabled={serverState.submitting}\n        type=\"submit\"\n      >\n        Submit\n      </button>\n      {/* DO WITH JOSEPH! */}\n      {serverState.status && (\n        <p className={!serverState.status.ok ? \"errorMsg\" : \"successMsg\"}>\n          {serverState.status.msg}\n        </p>\n      )}\n      {/* setTimeout(() => {\n          <p className={!serverState.status.ok ? \"errorMsg\" : \"successMsg\"}>\n            {serverState.status.msg}\n          </p>;\n        }, 3000)} */}\n    </Form>\n  );\n};\n\nexport default Proposal;\n","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\GoogleLogout\\index.js",[],["97","98"],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\GoogleLogin\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\utils\\refreshtoken.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\pages\\EntryPage.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Signup\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\context\\AuthContext.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\UpdateProfile\\index.js",["99","100","101"],"import React, { useRef, useState } from \"react\";\r\nimport { Container, Card, Button, Form, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const { currentUser, updateEmail, updatePassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  /**************** USE THIS SOMEWHERE? *************/\r\n  // https://stackoverflow.com/questions/53949393/cant-perform-a-react-state-update-on-an-unmounted-component\r\n  // const isMountedComponent = useRef(true);\r\n  // useEffect(() => {\r\n  //   if (isMountedComponent.current) {\r\n  //   }\r\n  //   return () => {\r\n  //     isMountedComponent.current = false;\r\n  //   };\r\n  // });\r\n  // Don't think it's in this component, I think it's in the Private route component or forgot password\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match!\");\r\n    }\r\n\r\n    const promises = [];\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    // if our email changes calling the update email with our current email and adding it to array of promises\r\n    // if (emailRef.current.value !== currentUser.email) {\r\n    //   promises.push(updateEmail(emailRef.current.value));\r\n    // }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value));\r\n    }\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update profile.\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <Card>\r\n            <Card.Body>\r\n              <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                {/* <Form.Group id=\"email\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    required\r\n                    ref={emailRef}\r\n                    defaultValue={currentUser.email}\r\n                  ></Form.Control>\r\n                </Form.Group> */}\r\n                <Form.Group id=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    ref={passwordRef}\r\n                    placeholder=\"Leave blank to keep the same.\"\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group id=\"password-confirm\">\r\n                  <Form.Label>Password Confirmation</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    ref={passwordConfirmRef}\r\n                    placeholder=\"Leave blank to keep the same.\"\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" className=\"w-100\" disabled={loading}>\r\n                  Update\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n          <div className=\"w-100 text-center mt-2\">\r\n            <Link to=\"/Dashboard\">Cancel</Link>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\PrivateRoute\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\Dashboard\\index.js",[],"C:\\Users\\13107\\Desktop\\code\\Storied\\story-told\\src\\components\\ForgotPassword\\index.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":77,"column":17,"nodeType":"108","endLine":82,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":84,"column":6,"nodeType":"111","endLine":84,"endColumn":14,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"110","line":76,"column":6,"nodeType":"111","endLine":76,"endColumn":14,"suggestions":"113"},{"ruleId":"102","replacedBy":"114"},{"ruleId":"104","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":7,"column":9,"nodeType":"118","messageId":"119","endLine":7,"endColumn":17},{"ruleId":"116","severity":1,"message":"120","line":10,"column":11,"nodeType":"118","messageId":"119","endLine":10,"endColumn":22},{"ruleId":"116","severity":1,"message":"121","line":10,"column":24,"nodeType":"118","messageId":"119","endLine":10,"endColumn":35},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fieldErrors' and 'validate'. Either include them or remove the dependency array.","ArrayExpression",["124"],["125"],["122"],["123"],"no-unused-vars","'emailRef' is assigned a value but never used.","Identifier","unusedVar","'currentUser' is assigned a value but never used.","'updateEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"126","fix":"128"},"Update the dependencies array to be: [fieldErrors, inputs, validate]",{"range":"129","text":"130"},{"range":"131","text":"130"},[2026,2034],"[fieldErrors, inputs, validate]",[1898,1906]]